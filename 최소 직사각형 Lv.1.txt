public class Solution {
    public int solution(int[][] sizes) { //가로, 세로 길이를 나타내는 2차원 배열 
        int answer = 0;
        int max_width=0; //먼저 가로, 세로 중 가장 최대 길이를 파악 
        int max_height=0;

        for(int i=0;i<sizes.length;i++){
            
          int temp=0;
            if(sizes[i][0]<sizes[i][1]){//가로<세로 이면 두 인덱스 변경 
                temp=sizes[i][0];//두 인덱스를 변경하여 큰 값 변경 
                sizes[i][0]=sizes[i][1];
                sizes[i][1]=temp;
            }
            //가로 중 가장 긴 값
            if(max_width<sizes[i][0]){//배열 크기만큼 가로의 값을 비교
                max_width=sizes[i][0];
            }
            //세로 중 가장 긴 값 
            if(max_height<sizes[i][1]){
                 max_height=sizes[i][1];
            }
            
        }
        answer=max_width*max_height;
        return answer;
    }
    public static void main(String[] args){
        Solution s=new Solution();
        System.out.print(s.solution(new int[][]{{60, 50}, {30, 70}, {60, 30}, {80, 40}}));
       System.out.print(s.solution(new int[][]{{10, 7}, {12, 3}, {8, 15}, {14, 7},{5, 15}}));   
         System.out.print(s.solution(new int[][]{{14, 4}, {19, 6}, {6, 16}, {18, 7},{7, 11}}));   
    }
}